import java.awt.Container;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;

public class ServidorTela extends JDialog implements ActionListener {
	public SNEO sneo;
	public JLabel 	lCodigo, lNome, lDataNasc, lSexo;
	public JTextField tfSigla, tfNome;
	public String sSexo[] = {"", "Masculino", "Feminino"};
	public JComboBox cbSexo; 
	public JFormattedTextField ftfDataNasc;
	public MaskFormatter mfDataNasc;
	public int distBotoes = 20;
	public ToolBar toolBar;
	public char operacao; //[0]Nenhuma operação; [1]Incluir; [2]Atualizar; [3]Excluir;
	public ServidorTabela ssTabela;
	public Random random;
	
	
	

    public ServidorTela(Frame owner, String title, boolean modal, SNEO sneo, ServidorTabela cTabela) {
      	super(owner, title, modal);
      	this.sneo = sneo;
      	setResizable(false);
      	setBounds(280, 300, 630, 420);
      	
      	//Vinculando a referência com a Tabela de Clientes
      	this.ssTabela = ssTabela;
      	
    	
    	//Cria o container (box, caixa) para a  
    	//agrupamento dos objetos
    	Container areaTrabalho = getContentPane();
    	areaTrabalho.setLayout(null);
    	
    	
    	lCodigo = new JLabel("Codigo");
    	lCodigo.setBounds(20, 110, 100, 40);
    	lCodigo.setFont(new Font("TimesRoman", Font.ITALIC, 25)); 
    	areaTrabalho.add(lCodigo);
    	
    	tfSigla = new JTextField("");
    	tfSigla.setBounds(120, 110, 200, 40);
    	tfSigla.addActionListener(this); 
    	tfSigla.setHorizontalAlignment(JTextField.LEFT);
    	tfSigla.setFont(new Font("TimesRoman", Font.ITALIC, 25));
    	tfSigla.setEditable(true);
    	areaTrabalho.add(tfSigla);
    	
    	lNome = new JLabel("Nome");
    	lNome.setBounds(20, 180, 150, 40);
    	lNome.setFont(new Font("TimesRoman", Font.ITALIC, 25)); 
    	areaTrabalho.add(lNome);
    	
    	tfNome = new JTextField("");
    	tfNome.setBounds(120, 180, 450, 40);
    	tfNome.setHorizontalAlignment(JTextField.LEFT);
    	tfSigla.addActionListener(this); 
    	tfNome.setFont(new Font("TimesRoman",Font.ITALIC, 25));
    	tfNome.setEditable(true);
    	areaTrabalho.add(tfNome);
    	
    	
    	lDataNasc = new JLabel("Data de Nascimento");
    	lDataNasc.setBounds(20, 250, 250, 40);
    	lDataNasc.setFont(new Font("TimesRoman", Font.ITALIC, 25)); 
    	areaTrabalho.add(lDataNasc);
    	        	
    	try{
    		mfDataNasc = new MaskFormatter("##/##/####");
    		mfDataNasc.setPlaceholderCharacter('_');
    	}
    	catch(ParseException ex){
    		//código para exceção
    	}
    	
    	ftfDataNasc = new JFormattedTextField(mfDataNasc);
        ftfDataNasc.setBounds(250, 250, 130, 40);
        ftfDataNasc.addActionListener(this); 
        ftfDataNasc.setFont(new Font("TimesRoman", Font.ITALIC, 25));
    	areaTrabalho.add(ftfDataNasc);
        	    
    	
    	lSexo = new JLabel("Sexo");
    	lSexo.setBounds(20, 320, 100, 40);
    	lSexo.setFont(new Font("TimesRoman", Font.ITALIC, 25)); 
    	areaTrabalho.add(lSexo);
    	
    	cbSexo = new JComboBox(sSexo);
    	cbSexo.setBounds(120, 320, 140, 40);
    	cbSexo.setFont(new Font("TimesRoman", Font.ITALIC, 25)); 
    	areaTrabalho.add(cbSexo);
    	
    	toolBar = new ToolBar();
    	toolBar.setBounds(1, 1, 700, 70); 	
    	toolBar.bIncluir.addActionListener(this);    	  	
    	toolBar.bAtualizar.addActionListener(this);
    	toolBar.bExcluir.addActionListener(this);
    	toolBar.bConfirmar.addActionListener(this);    	
    	toolBar.bLimpar.addActionListener(this);    	
    	toolBar.bPesquisar.addActionListener(this);
    	
    	areaTrabalho.add(toolBar);
    	toolBar.desbloquearBotoes();
    	toolBar.bIncluir.requestFocus();
    	
    	operacao = '0';
    	limpar();
    	bloquearCampos();
    }
    
    
    public void actionPerformed(ActionEvent e){ 
    	int temp = 0;
	      if (e.getSource()==toolBar.bIncluir)	
	    	incluir();
	      else if(e.getSource()==toolBar.bAtualizar)
	        atualizar();
	      else if(e.getSource()==toolBar.bExcluir)
	        excluir();
	      else if(e.getSource()==toolBar.bConfirmar)
	        confirmar();
	      else if(e.getSource()==toolBar.bLimpar)
	        limpar();
	      else if(e.getSource()==toolBar.bPesquisar)
	      	visualizar();
	      else if(e.getSource()==tfSigla)
	        tfNome.requestFocus();
	      else if(e.getSource()==tfNome)
	        ftfDataNasc.requestFocus();
	      else if(e.getSource()==ftfDataNasc)
	        cbSexo.requestFocus();
	      else 
	      	temp = 0;
	    
  	}
  	
  	
  	public void incluir(){
  		tfSigla.requestFocus();
  		toolBar.bloquearBotoes();
		desbloquearCampos();
	
  		SimpleDateFormat dataent = new SimpleDateFormat("yyyy"); 		
  		int temp = 0;
  		dataent.getCalendar();
  		Random gerar = new Random();
  	    int numero = gerar.nextInt(10001)+ 9999;
  	    tfSigla.setEnabled(false); 
  	    tfSigla.setText(dataent.format(new Date())+numero);
		operacao = '1';		 		 
	}
  	
  	public void atualizar(){
  		tfSigla.requestFocus();
		toolBar.bloquearBotoes();
		
		desbloquearCampos();
	
		
		operacao = '2';		 		 
	}
	
	public void excluir(){
		tfSigla.requestFocus();
		toolBar.bloquearBotoes();
		desbloquearCampos();
		operacao = '3';		 		 
	}
	public void confirmar(){
		toolBar.desbloquearBotoes();
		bloquearCampos();
		limpar();
		
		String textoData = ftfDataNasc.getText();
		int dia = Integer.parseInt(textoData.substring(0,2));
		int mes = Integer.parseInt(textoData.substring(3,5));
		int ano = Integer.parseInt(textoData.substring(6,10));
			
		if(operacao == '1'){
			char sexo;
			String textoSexo = ""+cbSexo.getItemAt(cbSexo.getSelectedIndex());
			if(textoSexo.equals("Masculino") )
			   sexo = 'M';	
			else if(textoSexo.equals("Feminino"))
				sexo = 'F';
			else 
				sexo = ' ';
				
			if(ssTabela.add(Integer.parseInt(tfSigla.getText()), tfNome.getText(), dia, mes, ano, sexo)=='1')
				JOptionPane.showMessageDialog(null, "Cliente cadastrado com sucesso!","Aviso", JOptionPane.INFORMATION_MESSAGE);			
			else
				JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o cliente!","Aviso", JOptionPane.INFORMATION_MESSAGE);							
		}		
		/*else{
			if(operacao == '2'){
			
			}			
	 		else{
	 			if(operacao == '3'){
	 				
	 			}
	 			else
	 		
		}	
		*/		 
			
	    limpar();
	}
	
  	public void limpar(){
		 tfSigla.setText("");
		 tfNome.setText("");
		 ftfDataNasc.setText("");
		 cbSexo.setSelectedIndex(0);		 		 
	}
  	
  	public void bloquearCampos(){
  	 	tfSigla.setEnabled(false);
		tfNome.setEnabled(false);
		ftfDataNasc.setEnabled(false);
		cbSexo.setEnabled(false);	
  	}
  	
  	public void desbloquearCampos(){
  	 	tfSigla.setEnabled(true);
		tfNome.setEnabled(true);
		ftfDataNasc.setEnabled(true);
		cbSexo.setEnabled(true);	
  	}
  	
  	public void visualizar(){
  		if(ssTabela.getNumero()==0)
  			JOptionPane.showMessageDialog(null, "Nenhum cliente cadastrado!","Aviso", JOptionPane.INFORMATION_MESSAGE);		 
  		else{
  		  for(int i=0; i<ssTabela.getNumero(); i++)
	    	JOptionPane.showMessageDialog(null, ""+ssTabela.getServidor(i)+"\n","Aviso", JOptionPane.INFORMATION_MESSAGE);	      
  		}
  	}
    
}